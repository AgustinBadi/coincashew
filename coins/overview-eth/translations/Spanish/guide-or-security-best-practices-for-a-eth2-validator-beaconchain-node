---
description: Pasos r√°pidos para asegurar el nodo.
---

# Gu√≠a \| Mejores pr√°cticas de seguridad para un nodo beaconchain de validador ETH2

## ü§ñ Requisitos previos

* Servidor Ubuntu o Ubuntu instalado
* Servidor SSH instalado
* un cliente SSH o acceso a la ventana de terminal

En caso de que necesite instalar el servidor SSH, refi√©rase a:

{% embed url="https://www.simplified.guide/ubuntu/install-ssh-server" %}

En caso de que necesite un cliente SSH para su sistema operativo, refi√©rase a:

{% embed url="https://www.howtogeek.com/311287/how-to-connect-to-an-ssh-server-from-windows-macos-or-linux/" %}

## üßô‚ôÇCrear un usuario no root con privilegios de sudo

{% hint style="info" %}
Haz un h√°bito de iniciar sesi√≥n en tu servidor usando una cuenta que no sea root. Esto evitar√° la eliminaci√≥n accidental de archivos si comete un error. Por ejemplo, el comando `rm` puede borrar todo el servidor si se ejecuta incorrectamente usando un usuario ra√≠z.
{% endhint %}

{% hint style="danger" %}
üî•**Consejo**: NO use rutinamente la cuenta ra√≠z. Usa `su` o `sudo`, siempre.
{% endhint %}

SSH a su servidor con su cliente SSH

```bash
ssh username@server.public.ip.address
# ejemplo
# ssh myUsername@77.22.161.10
```

Crear un nuevo usuario llamado ethereum

```text
sudo useradd -m -s /bin/bash ethereum
```

Establecer la contrase√±a para el usuario de ethereum

```text
sudo passwd ethereum
```

A√±adir ethereum al grupo de sudo

```text
sudo usermod -aG sudo ethereum
```

## üîê **Deshabilita la autenticaci√≥n de contrase√±a SSH y solo utiliza claves SSH**

{% hint style="info" %}
Las reglas b√°sicas del endurecimiento del SSH son:

* No hay contrase√±a para el acceso SSH \(usar clave privada\)
* No permitir root a SSH \(los usuarios apropiados deber√≠an SSH, entonces `su` o `sudo`\)
* Utilice `sudo` para los usuarios para que los comandos sean registrados
* Registrar intentos de inicio de sesi√≥n no autorizados (y considerar software bloquear/banear a los usuarios que intentan acceder a su servidor demasiadas veces, como fail2ban\)
* Bloquear SSH a s√≥lo el rango ip que necesita \(si lo siente\)
{% endhint %}

Crear un nuevo par de claves SSH en su m√°quina local. Ejecute esto en su m√°quina local. Se le pedir√° que escriba un nombre de archivo en el que guardar la clave. Este ser√° tu nombre de clave ****.

Su elecci√≥n del algoritmo de clave p√∫blica [ED25519 o RSA](https://goteleport.com/blog/comparing-ssh-keys/).

{% tabs %}
{% tab title="ED25519" %}
```
ssh-keygen -t ed25519
```
{% endtab %}

{% tab title="RSA" %}
```bash
ssh-keygen -t rsa -b 4096
```
{% endtab %}
{% endtabs %}

Transfiere la clave p√∫blica a su nodo remoto. Actualiza **nombreclave.pub** apropiadamente.

```bash
ssh-copy-id -i $HOME/.ssh/keyname.pub ethereum@server.public.ip.address
```

Inicia sesi√≥n con tu nuevo usuario de ethereum

```text
ssh ethereum@server.public.ip.address
```

Desactivar el usuario root y el inicio de sesi√≥n basado en contrase√±a. Edita el archivo `/etc/ssh/sshd_config`

```text
sudo nano /ssh/sshd_config
```

Localice **ChallengeResponseAuthentication** y actualice a no ser

```text
ChallengeResponseAuthentication no
```

Localizar **PasswordAuthentication** sin actualizar

```text
PasswordAuthentication no
```

Localice **PermitRootLogin** y actualice a cero

```text
PermitRootLogin no
```

Localice **PermitEmptyPasswords** y actualice a ninguna

```text
PermitEmptyPasswords no
```

**Opcional**: Localice **Puerto** y personalice su **puerto** aleatorio.

{% hint style="info" %}
Usa un **puerto** aleatorio \# desde 1024 hasta 49141. [Comprobar posibles conflictos. ](https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers)
{% endhint %}

```bash
Port <port number>
```

Validar la sintaxis de su nueva configuraci√≥n SSH.

```text
sudo sshd -t
```

Si no hay errores con la validaci√≥n de sintaxis, vuelva a cargar el proceso SSH

```text
sudo service sshd reload
```

Verificar el inicio de sesi√≥n todav√≠a funciona

{% tabs %}
{% tab title="Standard SSH Port 22" %}
```text
ssh ethereum@server.public.ip.address
```
{% endtab %}

{% tab title="Custom SSH Port" %}
```bash
ssh ethereum@server.public.ip.address -p <custom port number>
```
{% endtab %}
{% endtabs %}

{% hint style="info" %}
Alternativamente, puede que necesite usar. Agrega la bandera `-p <port#>` si usaste un puerto SSH personalizado.

```bash
ssh -i <path to your SSH_key_name.pub> ethereum@server.public.ip.address
```
{% endhint %}

## ü§ñ **Actualiza tu sistema**

{% hint style="warning" %}
Es de vital importancia mantener su sistema actualizado con los √∫ltimos parches para evitar que los intrusos accedan a su sistema.
{% endhint %}

```bash
sudo apt-get update -y && sudo apt-get upgrade -y
sudo apt-get autoremove
sudo apt-get autoclean
```

Active las actualizaciones autom√°ticas para que no tenga que instalarlas manualmente.

```text
sudo apt-get install unattended-upgrades
sudo dpkg-reconfigure -plow unattended-upgrades
```

## üêª Desactivar cuenta de root

Los administradores del sistema no deber√≠an iniciar sesi√≥n como root con frecuencia para mantener la seguridad del servidor. En su lugar, puede usar la ejecuci√≥n de sudo que requiera privilegios de bajo nivel.

```bash
# Para desactivar la cuenta de root, simplemente utilice la opci√≥n -l.
sudo passwd -l root
```

```bash
# Si por alguna raz√≥n v√°lida, necesita volver a activar la cuenta, simplemente utilice la opci√≥n -u.
sudo passwd -u root
```

## üõ† Configurar la autenticaci√≥n de dos factores para SSH \[Opcional\]

{% hint style="info" %}
SSH, el int√©rprete de comandos seguro, se utiliza a menudo para acceder a sistemas Linux remotos. Debido a que a menudo lo usamos para conectar con ordenadores que contienen datos importantes, se recomienda a√±adir otra capa de seguridad. Aqu√≠ viene la autenticaci√≥n de doble factor \(_2FA_\).
{% endhint %}

```text
sudo apt install libpam-google-authenticator -y
```

Para hacer que SSH utilice el m√≥dulo de Google Authenticator PAM, edite el archivo `ma√±/pam.d/sshd`:

```text
sudo nano /etc/pam.d/sshd
```

A√±adir la siguiente l√≠nea:

```text
auth required pam_google_authenticator.so
```

Ahora necesita reiniciar el daemon `sshd` utilizando:

```text
sudo systemctl restart sshd.service
```

Modificar `ma√±ana/ssh/sshd_config`

```text
sudo nano /etc/ssh/sshd_config
```

Localice **ChallengeResponseAuthentication** y actualice a s√≠

```text
ChallengeResponseAuthentication yes
```

Localice **UsePAM** y actualice a s√≠

```text
UsePAM yes
```

Guardar el archivo y salir.

Ejecuta el comando **google-autenticator**.

```text
google-authenticator
```

Te har√° una serie de preguntas, aqu√≠ tienes una configuraci√≥n recomendada:

* Hacer fichas "base de tiempo": s√≠
* Actualizar el archivo `.google_autenticator` : s√≠
* No permitir m√∫ltiples usos: s√≠
* Aumentar el l√≠mite de tiempo de generaci√≥n original: sin
* Habilitar limitaci√≥n de velocidad: s√≠

Puede que hayas notado el gigante c√≥digo QR que apareci√≥ durante el proceso, Debajo est√°n tus c√≥digos de emergencia para usar si no tienes acceso a tu tel√©fono: anotalos en el papel y mant√©ngalos en un lugar seguro.

Ahora, abre Google Authenticator en tu tel√©fono y a√±ade tu clave secreta para hacer que la autenticaci√≥n de dos factores funcione.

{% hint style="danger" %}
**Nota**: Si est√° habilitando 2FA en una m√°quina remota a la que accede a trav√©s de SSH, necesita seguir **los pasos 2 y 3** de [este tutorial](https://www.digitalocean.com/community/tutorials/how-to-set-up-multi-factor-authentication-for-ssh-on-ubuntu-18-04) para hacer que 2FA funcione.
{% endhint %}

## üß© Memoria segura compartida

{% hint style="info" %}
Una de las primeras cosas que deber√≠a hacer es asegurar la [memoria compartida](https://www.lifewire.com/what-is-random-access-memory-ram-2618159) usada en el sistema. Si no lo sabe, la memoria compartida puede ser usada en un ataque contra un servicio en ejecuci√≥n. Por esto, asegure esa porci√≥n de la memoria del sistema.

Para obtener m√°s informaci√≥n sobre memorias seguras compartidas, lea este [art√≠culo de techrepublic.com](https://www.techrepublic.com/article/how-to-enable-secure-shared-memory-on-ubuntu-server/).
{% endhint %}

{% hint style="warning" %}
### Un caso excepcional

Puede haber una raz√≥n para que necesites montar ese espacio de memoria en modo de lectura/escritura \(como una aplicaci√≥n de servidor espec√≠fica como **DappNode** que requiere dicho acceso a la memoria compartida o aplicaciones est√°ndar como Google Chrome\). En este caso, utilice la siguiente l√≠nea para el archivo fstab con las instrucciones siguientes.

```text
none /run/shm tmpfs rw,noexec,nosuid,nodev 0 0
```

La l√≠nea anterior montar√° la memoria compartida con acceso de lectura/escritura pero sin permiso para ejecutar programas, cambiar el UID de los programas en ejecuci√≥n, o para crear bloques o dispositivos de caracteres en el espacio de nombres. Esto es una mejora de seguridad neta sobre la configuraci√≥n predeterminada.

### Usar con precauci√≥n

Con un poco de prueba y error, puede descubrir algunas aplicaciones\(**como DappNode**\) no funcionan con memoria compartida en modo de solo lectura. Para la m√°xima seguridad y si es compatible con sus aplicaciones, vale la pena intentar implementar este ajuste seguro de memoria compartida.

Fuente: [techrepublic.com](https://www.techrepublic.com/article/how-to-enable-secure-shared-memory-on-ubuntu-server/)
{% endhint %}

Editar `/fstab`

```text
sudo nano /etc/fstab
```

Inserte la siguiente l√≠nea en la parte inferior del archivo y guarde/cierre. Esto establece la memoria compartida en modo de s√≥lo lectura.

```text
tmpfs    /run/shm    tmpfs    ro,noexec,nosuid    0 0
```

Reiniciar el nodo para que los cambios surtan efecto.

```text
sudo reboot
```

## ‚õì**Instalar Fail2ban**

{% hint style="info" %}
Fail2ban es un sistema de prevenci√≥n de intrusiones que monitoriza los archivos de registro y busca patrones particulares que corresponden a un intento de inicio de sesi√≥n fallido. Si se detecta un cierto n√∫mero de inicios de sesi√≥n fallidos desde una direcci√≥n IP espec√≠fica \(dentro de una cantidad especificada de tiempo\), fail2ban bloquea el acceso desde esa direcci√≥n IP.
{% endhint %}

```text
sudo apt-get install fail2ban -y
```

Editar un archivo de configuraci√≥n que monitorice las conexiones SSH.

```text
sudo nano /etc/fail2ban/jail.local
```

Agregue las siguientes l√≠neas al final del archivo.

{% hint style="info" %}
üî• **Consejo de direcciones IP de lista blanca**: El par√°metro `ignoreip` acepta direcciones IP, Rangos IP o hosts DNS que puede especificar para poder conectarse. Aqu√≠ es donde desea especificar su m√°quina local, rango IP local o dominio local, separados por espacios.

```bash
# Ejemplo
ignoreip = 192.168.1.0/24 127.0.0.1/8 
```
{% endhint %}

```bash
[sshd]
enabled = true
puerto = <22 o su n√∫mero de puerto al azar>
filter = sshd
logpath = /var/log/auth. og
maxretry = 3
# direcciones IP en la lista blanca
ignoreip = <list of whitelisted IP address, your local daily laptop/pc>
```

Guardar/cerrar archivo.

Reiniciar fail2ban para que la configuraci√≥n surta efecto.

```text
sudo systemctl restart fail2ban
```

## üß±**Configura tu cortafuegos**

El firewall est√°ndar UFW se puede utilizar para controlar el acceso a la red a su nodo.

Con cualquier instalaci√≥n nueva, ufw est√° desactivado por defecto. Habilitarlo con los siguientes ajustes.

* Puerto 22 \(o su puerto aleatorio \#\) TCP para conexi√≥n SSH
* Puertos para tr√°fico p2p
  * Faro utiliza el puerto 9000 tcp/udp
  * Teku utiliza el puerto 9000 tcp/udp
  * Prysm utiliza el puerto 13000 tcp y el puerto 12000 udp
  * Nimbus utiliza el puerto 9000 tcp/udp
  * Lodestar utiliza el puerto 30607 tcp y el puerto 9000 udp
* Nodo 30303 tcp/udp eth1
* Puerto 3000 tcp para Grafana
* Puerto 9090 tcp para datos de exportaci√≥n de Prometheus \(opcional\)

{% tabs %}
{% tab title="Lighthouse" %}
```bash
sudo ufw allow <22 or your random port number>/tcp
sudo ufw allow 9000/tcp
sudo ufw allow 9000/udp
sudo ufw allow 30303/tcp
sudo ufw allow 30303/udp
sudo ufw enable
sudo ufw status numbered
```
{% endtab %}

{% tab title="Prysm" %}
```bash
sudo ufw allow <22 or your random port number>/tcp
sudo ufw allow 13000/tcp
sudo ufw allow 12000/udp
sudo ufw allow 30303/tcp
sudo ufw allow 30303/udp
sudo ufw enable
sudo ufw status numbered
```
{% endtab %}

{% tab title="Teku" %}
```bash
sudo ufw allow <22 or your random port number>/tcp
sudo ufw allow 9000/tcp
sudo ufw allow 9000/udp
sudo ufw allow 30303/tcp
sudo ufw allow 30303/udp
sudo ufw enable
sudo ufw status numbered
```
{% endtab %}

{% tab title="Nimbus" %}
```bash
sudo ufw allow <22 or your random port number>/tcp
sudo ufw allow 9000/tcp
sudo ufw allow 9000/udp
sudo ufw allow 30303/tcp
sudo ufw allow 30303/udp
sudo ufw enable
sudo ufw status numbered
```
{% endtab %}

{% tab title="Lodestar" %}
```bash
sudo ufw allow <22 or your random port number>/tcp
sudo ufw allow 30607/tcp
sudo ufw allow 9000/udp
sudo ufw allow 30303/tcp
sudo ufw allow 30303/udp
sudo ufw enable
sudo ufw status numbered
```
{% endtab %}
{% endtabs %}

{% hint style="danger" %}
No exponga Grafana \(puerto 3000\) y Prometheus endpoint \(puerto 9090\) al internet p√∫blico ya que esto invita a una nueva superficie de ataque! Una soluci√≥n segura ser√≠a acceder a Grafana a trav√©s de un t√∫nel ssh con Wireguard.
{% endhint %}

S√≥lo abre los siguientes puertos en la configuraci√≥n local de apuestas, detr√°s de un cortafuegos del router dom√©stico u otro cortafuegos de red.

\*\*\*\*üî• **Es peligroso abrir estos puertos en un nodo VPS/nube.**

```bash
sudo ufw allow 3000/tcp
sudo ufw allow 9090/tcp
```

Confirme que los ajustes est√°n en efecto.
> ```csharp
     To                         Action      From
     --                         ------      ----
[ 1] 22/tcp                     ALLOW IN    Anywhere
# SSH
[ 2] 3000/tcp                   ALLOW IN    Anywhere
# Grafana
[ 3] 9000/tcp                   ALLOW IN    Anywhere
# eth2 p2p traffic
[ 4] 9090/tcp                   ALLOW IN    Anywhere
# Prometheus
[ 5] 30303/tcp                  ALLOW IN    Anywhere
# eth1 node
[ 6] 22/tcp (v6)                ALLOW IN    Anywhere (v6)
# SSH
[ 7] 3000/tcp (v6)              ALLOW IN    Anywhere (v6)
# Grafana
[ 8] 9000/tcp (v6)              ALLOW IN    Anywhere (v6)
# eth2 p2p traffic
[ 9] 9090/tcp (v6)              ALLOW IN    Anywhere (v6)
# Prometheus
[10] 30303/tcp (v6)             ALLOW IN    Anywhere (v6)
# eth1 node
```

**\[ Opcional pero recomendado \]** Se puede configurar la lista blanca \(o permitir conexiones desde una IP espec√≠fica) mediante el siguiente comando.

```bash
sudo ufw allow from <your local daily laptop/pc>
# Example
# sudo ufw allow from 192.168.50.22
```

{% hint style="info" %}
 üéä **Consejo de reenv√≠o de puertos:** Tendr√°s que reenviar y abrir puertos a tu validador. Verifique que est√° trabajando con [https://www.yougetsignal.com/tools/open-ports/](https://www.yougetsignal.com/tools/open-ports/) o [https://canyouseeme.org/](https://canyouseeme.org/).
{% endhint %}

## :‚ú´ hone_receiver: Verificar puertos de escucha

Si desea mantener un servidor seguro, debe validar los puertos de red escuchando de vez en cuando. Esto le proporcionar√° informaci√≥n esencial sobre su red.

```bash
sudo ss -tulpn
# Ejemplo de salida. Aseg√∫rate de que los n√∫meros de puerto se vean bien.
# Estado Netid Recv-Q Send-Q Direcci√≥n Local:Port Peer Address:Port Process
# tcp LISTEN 0 128 127. .0.1:5052 0.0.0. :* usuarios:(("faro",pid=12160, d=22))
# LISTEN tcp 0 128 127. .0.1:5054 0. .0.0:* usuarios:(("faro",pid=12160, d=23))
# Tcp LISTEN 0 1024 0. .0.0:9000 0.0.0. :* usuarios:(("faro",pid=12160, d=21))
# udp UNCONN 0 *:30303 *:* usuarios:(("geth", id=22117, d=158))
# Tcp LISTEN 0 4096 *:30303 *:* users:(("geth", id=22117,fd=156))
```

Tambi√©n puedes usar `netstat`

```bash
sudo netstat -tulpn
# Ejemplo de salida. Aseg√∫rate de que los n√∫meros de puerto se vean bien.
# Proto Recv-Q Enviar-Q Direcci√≥n Local Direcci√≥n For√°nea PID/Nombre del programa
# tcp 0 0 127. .0.1:5052 0.0.0. :* LISTEN 12160/faro
# tcp 0 0 127. .0. :5054 0.0.0. :* LISTEN 12160/faro
# tcp 0 0 0. .0.0:9000 0.0.0. :* LISTEN 12160/faro
# tcp6 0 0 :::30303 :::* LISTEN 22117/geth
# udp6 0 0 :::30303 :::* LISTEN 22117/geth
```

## üë©üöÄ **Usar** cuentas de usuario del sistema - Principio de Privilegio M√≠nimo \[Usuarios Avanzados / Opcional\]

{% hint style="info" %}
**Recomendado solo para usuarios avanzados**

**Principio de Menos Privilegio**: Cada proceso eth2 tiene asignado una _cuenta de usuario del sistema_ y se ejecuta bajo la menor cantidad de privilegios requeridos para funcionar. Esta mejor pr√°ctica protege contra un escenario donde una vulnerabilidad o explotaci√≥n descubierta en un proceso espec√≠fico podr√≠a permitir el acceso a otros procesos del sistema.
{% endhint %}

```bash
# crea una cuenta de usuario del sistema para el servicio eth1
sudo adduser --system --no-create-home eth1

# crea una cuenta de usuario del sistema para el servicio de validaci√≥n
sudo adduser --system --no-create-home validator

# crea una cuenta de usuario del sistema para el servicio beacon-chain
sudo adduser --system --no-create-home beacon-chain

# crea una cuenta de usuario del sistema para la barra diagonal
sudo adduser --system --no-create-home slasher
```

{% hint style="danger" %}
\*\*\*\*üî• **Advertencias para Usuarios Avanzados**

Si decide utilizar **cuentas de usuario del sistema**, recuerde reemplazar los **archivos de unidad del sistema** por los usuarios correspondientes.

```bash
# Ejemplo de archivo de unidad beacon-chain.service
User            = beacon-chain
```

Adem√°s, aseg√∫rese de que la propiedad correcta del **archivo** est√° asignada a su **cuenta de usuario del sistema** cuando corresponda.

```bash
# Ejemplo del archivo de contrase√±a del validador del prysm
sudo chown validator:validator -R $HOME/.eth2validators/validators-password.txt
```
{% endhint %}

## ‚ú® Buenas pr√°cticas adicionales del nodo validador

<table>
  <thead>
    <tr>
      <th style="text-align:left"></th>
      <th style="text-align:left"></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align:left">Redes</td>
      <td style="text-align:left">
        <p></p>
        <p>Asigne direcciones IP internas est√°ticas tanto a su nodo validador como a su ordenador port√°til/port√°til diario.
          Esto es √∫til junto con la funci√≥n ufw y Fail2ban&apos;s de la lista blanca
. Normalmente, esto se puede configurar en la configuraci√≥n de tu enrutador&apos;s.
          Consulte el manual de su enrutador&apos;s para obtener instrucciones.</p>
      </td>
    </tr>
    <tr>
      <td style="text-align:left">Fuente de energ√≠a</td>
      <td style="text-align:left">En caso de aver√≠a de corriente, desea que su m√°quina validadora se reinicie tan
        como est√© disponible la energ√≠a. In the BIOS settings, change the <b>Restore on AC / Power Loss</b> or <b>After Power Loss</b> setting
        to always on. Mejor a√∫n, instale un suministro de energ√≠a ininterrumpido (UPS).</td>
    </tr>
    <tr>
      <td style="text-align:left">Borrar el historial de bash</td>
      <td style="text-align:left">
        <p>Al presionar la tecla de flecha hacia arriba, puedes ver comandos anteriores que pueden contener
          datos sensibles. Para aclarar esto, ejecute lo siguiente:</p>
        <p><code>shred -u ~/.bash_history &amp;&amp; touch ~/.bash_history</code>
        </p>
      </td>
    </tr>
  </tbody>
</table>

{% hint style="info" %}
Aseg√∫rese de revisar la [Lista de verificaci√≥n \| C√≥mo confirmar un validador funcional y saludable ETH2.](guide-or-how-to-setup-a-validator-on-eth2-mainnet/checklist-or-how-to-confirm-a-healthy-functional-eth2-validator.md)
{% endhint %}

## ü§ñ Empieza a apostar construyendo un validador

### Visita aqu√≠ para nuestra gu√≠a [Mainnet](guide-or-how-to-setup-a-validator-on-eth2-mainnet/) y aqu√≠ para nuestra [gu√≠a de Testnet](guide-or-how-to-setup-a-validator-on-eth2-testnet.md).

{% hint style="success" %}
Felicidades por completar la gu√≠a. ‚ú®

¬øEncontraste √∫til nuestra gu√≠a? Env√≠enos una se√±al con un consejo y seguiremos actualiz√°ndola.

Realmente nos da energ√≠a para seguir creando las mejores gu√≠as criptogr√°ficas.

Usa [cointr.ee para encontrar nuestras direcciones de donaci√≥n ](https://cointr.ee/coincashew). üôè

Cualquier comentario y todas las solicitudes de extracci√≥n son muy apreciadas. üåõ

Descubra y chatee con otros interesados en Discord @

[https://discord.gg/w8Bx8W2HPW](https://discord.gg/w8Bx8W2HPW)üòÉ
{% endhint %}

üéä **Actualizaci√≥n 2020-12**: Gracias a todos los colaboradores de [Gitcoin](https://gitcoin.co/grants/1653/eth2-staking-guides-by-coincashew) , donde usted puede contribuir a trav√©s de [fondos cuadr√°ticos](https://vitalik.ca/general/2019/12/07/quadratic.html) y hacer un gran impacto. ¬°Financiaci√≥n completa! Gracias!üôè

{% embed url="https://gitcoin.co/grants/1653/eth2-staking-guides-by-coincashew" %}

## üöÄ Referencias

{% embed url="https://medium.com/@BaneBiddix/how-to-harden-your-ubuntu-18-04-server-ffc4b6658fe7" caption="" %}

{% embed url="https://linux-audit.com/ubuntu-server-hardening-guide-quick-and-secure/" caption="" %}

{% embed url="https://www.digitalocean.com/community/tutorials/how-to-harden-openssh-on-ubuntu-18-04" caption="" %}

{% embed url="https://ubuntu.com/tutorials/configure-ssh-2fa\#1-overview" caption="" %}

{% embed url="https://linuxize.com/post/install-configure-fail2ban-on-ubuntu-20-04/" %}

[https://gist.github.com/lokhman/cc716d2e2d373dd696b2d9264c0287a3\#file-ubuntu-hardening-md](https://gist.github.com/lokhman/cc716d2e2d373dd696b2d9264c0287a3#file-ubuntu-hardening-md)

{% embed url="https://www.lifewire.com/harden-ubuntu-server-security-4178243" caption="" %}

{% embed url="https://www.ubuntupit.com/best-linux-hardening-security-tips-a-‚ñ∫ ensive-checklist/" caption="" %}

