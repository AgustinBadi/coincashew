---
description: >-
  كن مُحقِّقاً وساعد على تأمين الأخلاق 2، بلوكشين إثبات الحصة. أي شخص لديه 32 ETH يمكنه الانضمام.
---

# الدليل: كيفية المشاركة على ETH2 Mainnet مع Prysm على Ubuntu

{% hint style="danger" %}
**Nov 24 2020 Update**: [mainnet الدليل الجديد موجود هنا](guide-or-how-to-setup-a-validator-on-eth2-mainnet/).

التعليمات أدناه الآن مهملة وللإحالة فقط.
{% endhint %}











{% hint style="info" %}
[Prysm](https://github.com/prysmaticlabs/prysm) هو تنفيذ بروتوكول Ethereum 2.0 مع التركيز على الاستخدام والأمن والموثوقية. تم تطوير Prysm بواسطة [مختبرات Prysmatic](https://prysmaticlabs.com/)، وهي شركة تركز فقط على تطوير عملائها. بريسم مكتوب في GPL-3.0 ويصدر بموجب ترخيص GPL-3.0.
{% endhint %}

## 🏁 0. الشروط المسبقة

### 👩💻 مهارات لتشغيل محقق أخلاقي وعقدة الإرشاد

كعامل متحقق للأخلاق،ستكون لديك عادة القدرات التالية:

* المعرفة العملية بكيفية إنشاء وتشغيل وصيانة عقدة وصحيح جهاز الإرشاد الأخلاقي باستمرار
* التزام بالحفاظ على المصادقة 24/7/365
* المهارات الأساسية لنظام التشغيل
* تعلمت أساسيات من خلال مشاهدة ['مقدمة للأخلاق char@@2 & أخذ للمبتدئين' من قبل سوبريفيز](https://www.youtube.com/watch?v=tpkpW031RCI)
* قد اجتاز أو هو مسجل بنشاط في [دورة إتقان الدراسة الإثنية2](https://ethereumstudymaster.com/)
* وقد قرأوا [8 أشياء يجب أن يعلمها كل مدقق أخلاق.](https://medium.com/chainsafe-systems/8-things-every-eth2-validator-should-know-before-staking-94df41701487)

### 🎗 **الحد الأدنى من متطلبات الإعداد**

* **نظام التشغيل:** 64 بت لينكس \(أي Ubuntu 20.04 LTS\)
* **المعالج:** وحدة المعالجة المركزية المزدوجة، المعلومات الأساسية i5–760 أو AMD FX-8100 أو أفضل
* **Memory:** 8GB RAM
* **التخزين:** 20GB SSD
* **الإنترنت:** اتصال الإنترنت على نطاق واسع مع السرعة 1 ميغابايت على الأقل.
* **القوة:** الطاقة الكهربائية الموثوقة.
* **رصيد ETH:** على الأقل 32 ETH وبعض ETH لرسوم معاملات الإيداع
* **المحفظة**: تم تثبيت Metamقناع

### 🏋♂ إعداد الأجهزة الموصى بها

* **نظام التشغيل:** 64 بت لينكس \(أي Ubuntu 20.04 LTS\)
* **المعالج:** وحدة المعالجة المركزية الرباعية ، المعلومات الأساسية i7–4770 أو AMD FX-8310 أو أفضل
* **الذاكرة:** 16 جيجابايت ذاكرة الوصول العشوائي أو أكثر
* **التخزين:** 1TB SSD أو أكثر
* **الإنترنت:** اتصالات الإنترنت العريضة النطاق بسرعة 10 ميغابايت على الأقل
* **الطاقة:** طاقة كهربائية موثوقة مع إمدادات الطاقة المستمرة \(UPS\)
* **رصيد ETH:** على الأقل 32 ETH وبعض ETH لرسوم معاملات الإيداع
* **المحفظة**: تم تثبيت Metamقناع

{% hint style="warning" %}
✨ **نصيحة محترفة للمفتوح**: ننصحك بشدة بأن تبدأ بصيغة جديدة من نظام تشغيل OS ، VM ، و/أو آلة. تجنب الصداع عن طريق عدم إعادة استخدام المفاتيح أو المحافظ أو قواعد البيانات الخاصة بك من أجل المصادقة الرئيسية على الشبكة.
{% endhint %}

### 🔓 موصى به لأفضل الممارسات الأمنية للمصادق على أخلاقيات 2

إذا كنت بحاجة إلى أفكار أو تذكير حول كيفية تأمين المصادقة الخاصة بك، يرجى الرجوع إلى

{% page-ref page="guide-or-security-best-practices-for-a-eth2-validator-beaconchain-node.md" %}

### 🛠 Setup Ubuntu

إذا كنت بحاجة إلى تثبيت Ubuntu، يرجى الرجوع إلى

{% page-ref page="../overview-xtz/guide-how-to-setup-a-baker/install-ubuntu.md" %}

### 🎭 إعداد Metamقناع

إذا كنت بحاجة إلى تثبيت Metamask، يرجى الرجوع إلى

{% صفحة-ref صفحة="../../wallets/browser-wallets/metamask-ethereum.md" %}

## 🌱 1. شراء/تبادل أو تعزيز ETH

{% hint style="info" %}
كل 32 ETH تملكها تسمح لك بصنع واحد للمصادقة. يمكنك تشغيل الآلاف من المدققين باستخدام عقدة المنارة الخاصة بك.
{% endhint %}

يجب دمج ETH \(أو مضاعفات 32 ETH\) في عنوان واحد يمكن الوصول إليه باستخدام Metamask.

إذا كنت بحاجة إلى شراء/تبادل أو شحن ETH إلى مضاعفات من 32، تحقق من:

{% page-ref page="guide-how-to-buy-eth.md" %}

## 👩💻 2. قم بالتسجيل لتكون مؤشرا على الإطلاق

1. تثبيت التبعيات، أداة إيداع مؤسسة إيثيريوم وإنشاء مجموعتين من أزواج المفتاح.

{% hint style="info" %}
كل مدقق سيكون لديه مجموعتين من أزواج المفاتيح. مفتاح **توقيع** و **مفتاح سحب.** هذه المفاتيح مشتقة من عبارة واحدة غير معروفة. [تعرف على المزيد حول المفاتيح.](https://blog.ethereum.org/2020/05/21/keys/)
{% endhint %}

لديك خيار تنزيل أداة إيداع مؤسسة [إيثيريوم المبنية مسبقاً](https://github.com/ethereum/eth2.0-deposit-cli) أو بنائها من المصدر.

{% tabs %}
{% tab title="Pre-built eth2deposit-cli" %}
تحميل eth2deposit-cli.

```bash
cd $HOME
ارسل https://github.com/ethereum/eth2.0-deposit-cli/releases/download/v1.0.0/eth2deposit-cli-9310de0-linux-amd64.tar.gz
```

التحقق من SHA256 يطابق المجموع الاختباري في [صفحة الإصدارات](https://github.com/ethereum/eth2.0-deposit-cli/releases/tag/v1.0.0).

```bash
sha256sum eth2deposit-cli-9310de0-linux-amd64.tar.gz 
# SHA256 ينبغي أن يكون
# b09da136895a7f77a4b430924ea2ae5827fa47b2bf444ea6fcfac5b04b8c8a
```

استخراج الأرشيف.

```text
tar -xvf eth2deposit-cli-9310de0-linux-amd64.tar.gz
cd eth2deposit-cli-9310de0-linux-amd64
```

اصنع فكرة جديدة.

```text
./إيداع الشبكة الرئيسية لسلسلة جديدة
```
{% endtab %}

{% tab title="Build from source code" %}
تثبيت التبعيات.

```text
sudo apt update
sudo apt install python3-pip git -y
```

تحميل رمز المصدر والتثبيت.

```text
mkdir ~/git
cd ~/git
git نسخة https://github.com/ethereum/eth2.0-deposit-cli.git
cd eth2.0-deposit-cli
sudo ./deposit.sh
```

اصنع فكرة جديدة.

```text
./deposit.sh new-mnemonic --chain mainnet
```
{% endtab %}

{% tab title="Advanced - Most Secure" %}
{% hint style="warning" %}
🔥**\[ اختياري \] برو أمان**: قم بتشغيل أداة eth2deposit-cli وقم بتوليد **بذرة الذاكرة الخاصة بك** لمفاتيح المصادقة الخاصة بك على **ماكينة هوائية غير متصلة بالإنترنت**.

يمكنك نسخ عن طريق مفتاح USB ثنائيات eth2deposit-cli التي تم بناؤها مسبقاً من آلة على الإنترنت إلى آلة غير متصل بالهواء.

* يحمي من هجمات تسجيل المفاتيح والهجمات الضارة بالفيروسات وغيرها من استغلال جدران الحماية أو الأمن.
* معزولة جسدياً عن بقية شبكتك.
* يجب ألا يكون لديك اتصال شبكي أو سلكي أو لاسلكي.
* ليس جهاز VM على آلة ذات اتصال بالشبكة.
* تعرف على المزيد حول [الفراغ في الهواء على ويكيبيديا](https://en.wikipedia.org/wiki/Air_gap_%28networking%29).
{% endhint %}
{% endtab %}
{% endtabs %}

1. اتبع الدعوات واختار كلمة مرور. قم بكتابة سماعتك و الحفاظ على هذا الأمان و **دون اتصال**.
2. اتبع الخطوات في [https://launchpad.ethereum.org/](https://launchpad.ethereum.org/) أثناء تخطي الخطوات التي أكملتها للتو. ادرس مادة العرض العام للمرحلة الصفرية من الأخلاقيات. فهم الأخلاق 2 هو مفتاح النجاح!
3. العودة إلى موقع الانطلاق ، قم بتحميل`deposit_data-########.json` الموجود في `validator_keys` مجلد.
4. الاتصال بالمشغل مع محفظة Metamask الخاصة بك ومراجعة الشروط وقبولها.
5. تأكيد المعاملة\(s\). هناك عملية إيداع واحدة من 32 ETH لكل مصحح.

{% hint style="info" %}
تقوم معاملتك بإرسال وإيداع ETH إلى [عنوان عقد الإيداع الرسمي ETH2. ](https://blog.ethereum.org/2020/11/04/eth2-quick-update-no-19/)

**تحقق من**, _تحقق مزدوج_, _**فحص ثلاثي**_ أن عنوان عقد الإيداع الرسمي للعرق 2 صحيح.[`0x000000219ab540356cBB839Cbe05303d7705Fa`](https://etherscan.io/address/0x00000000219ab540356cbb839cbe05303d7705fa)
{% endhint %}

{% hint style="danger" %}
تأكد من الكتابة أو تسجيل بذرة الذاكرة الخاصة بك **دون اتصال**. _ليس بريد إلكتروني. ليس سحابة._

اصنع **نسخة احتياطية بدون اتصال**، مثل مفتاح USB الخاص بك **`محققة_مفاتيح`** \`\`الدليل.
{% endhint %}

## 🛸 3. Install a ETH1 node

{% hint style="info" %}
ويتطلب الإيثيريوم 2.0 وصلة مع الإيثيريوم 1.0 من أجل رصد 32 من الرواسب التي تثبت صحة صحة التيتانيات. استضافة عقدة إيثيريوم 1.0 هي أفضل طريقة لتعظيم اللامركزية وتقليل الاعتماد على أطراف ثالثة مثل إنفورا إلى الحد الأقصى.
{% endhint %}

{% hint style="warning" %}
تفترض الخطوات التالية أنك أكملت [دليل أمان أفضل الممارسات](guide-or-security-best-practices-for-a-eth2-validator-beaconchain-node.md).
{% endhint %}

اختيارك لأي من [**OpenEthereum**](https://www.parity.io/ethereum/)**،** [**غيث**](https://geth.ethereum.org/)**،** [**بيسو**](https://besu.hyperledger.org/) **أو** [**هولندا**](https://www.nethermind.io/)****

{% tabs %}
{% علامة تبويب عنوان="OpenEthereum \(Parity\)" %}
#### 🤖 تثبيت وتشغيل OpenEthereum.

```text
mkdir ~/openethereum && cd ~/openethereum
wget https://github.com/openethereum/openethereum/releases/download/v3.0.1/openethereum-linux-v3.0.1.zip
unzip openethereum*.zip
chmod +x openethereum
rm openethereum*.zip
```

<unk> ⚙ **إعداد وتكوين النظام**

قم بتشغيل ما يلي لإنشاء ملف وحدة **** لتعريف تكوين `eth1.service` الخاص بك.

```bash
قطة > $HOME/eth1. النصائح << EF 
[Unit]
الوصف = خدمة openethereum eth1
يريد = الشبكة عبر الإنترنت. arget
بعد = الشبكة عبر الإنترنت. arget 

[Service]
المستخدم = $(whoami)
WorkingDirectory= /home/$(whoami)/openethereum
ExecStart = /home/$(whoami)/openethereum/openethereum --سلسة الأساس
Resstart = عند الفشل

[Install]
Woptedby = متعدد المستخدمين. مكافأة

```

نقل ملف الوحدة إلى `/etc/systemd/system` وإعطائه الأذونات.

```bash
sudo mv $HOME/eth1.service /etc/systemd/system/eth1.service
```

```bash
sudo chmod 644 /etc/systemd/system/eth1.service
```

قم بتشغيل ما يلي لتفعيل التشغيل التلقائي في وقت التشغيل.

```text
sudo systemctl daemon-reload
sudo systemctl تمكين eth1
```

#### ⛓ ابدأ OpenEthereum على mainnet.

```text
أخلاق بداية sudo systemctl
```
{% endtab %}

{% tab title="Geth" %}
#### 🧬 تثبيت من المستودع.

```text
sudo add-apt-repositor-y ppa:ethereum/ethereum
sudo apt-get upd-y
sudo apt-get install ethereum -y
```

⚙ **إعداد وتكوين النظام**

قم بتشغيل ما يلي لإنشاء ملف وحدة **** لتعريف تكوين `eth1.service` الخاص بك.

```bash
قطة > $HOME/eth1. النصيحة << EOF 
[Unit]
وصف = جيث إيث1 خدمة
يريد = الشبكة عبر الإنترنت. arget
بعد = الشبكة عبر الإنترنت. arget 

[Service]
المستخدم = $(whoami)
ExecStart = /usr/bin/geth --rpc --rpp
إعادة تشغيل = عند الفشل

[Install]
مطلوبة = متعدد المستخدمين. جدول الأعمال

```

نقل ملف الوحدة إلى `/etc/systemd/system` وإعطائه الأذونات.

```bash
sudo mv $HOME/eth1.service /etc/systemd/system/eth1.service
sudo chmod 644 /etc/systemd/system/eth1.service
```

قم بتشغيل ما يلي لتفعيل التشغيل التلقائي في وقت التشغيل.

```text
sudo systemctl daemon-reload
sudo systemctl تمكين eth1
```

#### ⛓ ابدأ جيث على mainnet.

```text
أخلاق بداية sudo systemctl
```
{% endtab %}

{% tab title="Besu" %}
#### 🧬 تثبيت التبعية لـ java.

```text
sudo apt install openjdk-11-jdk
```

#### 🌜 تحميل و فك ضغط بيزو

```text
cd
wget -O besu.tar.gz https://bintray.com/hyperledger-org/besu-repo/download_file?file_path=besu-1.5.0.tar.gz
tar -xvf besu.tar.gz
rm besu.tar.gz
mv besu-1.5.0 besu
```

⚙ **إعداد وتكوين النظام**

قم بتشغيل ما يلي لإنشاء ملف وحدة **** لتعريف تكوين `eth1.service` الخاص بك.

```bash
قطة > $HOME/eth1. النصائح << EF 
[Unit]
الوصف = خدمة openethereum eth1
يريد = الشبكة عبر الإنترنت. arget
بعد = الشبكة عبر الإنترنت. arget 

[Service]
المستخدم = $(whoami)
WorkingDirectory= /home/$(whoami)/besu/bin
ExecStart = /home/$(whoami)/besu/bin/besu --data-path="$HOME/. thereum_besu"
إعادة تشغيل = عند الفشل

[Install]
مطلوب = متعدد المستخدمين. جدول الأعمال

```

نقل ملف الوحدة إلى `/etc/systemd/system` وإعطائه الأذونات.

```bash
sudo mv $HOME/eth1.service /etc/systemd/system/eth1.service
sudo chmod 644 /etc/systemd/system/eth1.service
```

قم بتشغيل ما يلي لتفعيل التشغيل التلقائي في وقت التشغيل.

```text
sudo systemctl daemon-reload
sudo systemctl تمكين eth1
```

#### ⛓ ابدأ الاسبو على mainnet.

```text
أخلاق بداية sudo systemctl
```
{% endtab %}

{% tab title="Nethermind" %}
#### ⚙ تثبيت التبعيات.

```text
sudo apt-get تحديث && sudo apt-get install libsnappy-dev libc6-dev libc6 unzip -y
```

#### 🌜 تحميل وفك zip هولندا.

```text
mkdir ~/nethermind && cd ~/nethermind
wget -O nethermind.zip https://nethdev.blob.core.windows.net/builds/nethermind-linux-amd64-1.8.77-9d3a58a.zip
unzip nethermind.zip
rm nethermind.zip
```

#### 🛸 إطلاق هولندا.

```text
./Nethermind.Launcher
```

* حدد `عقدة الإيثريوم`
* حدد `إيثيريوم (mainnet)` ثم حدد `مزامنة سريعة`
* نعم لتمكين web3 / JSON RPC
* قبول IP الافتراضي
* تخطي تسجيل الاحصائيات
{% endtab %}

{% tab title="Minimum Hardware Setup" %}
{% hint style="info" %}
إنفورا مناسب لإعدادات مساحة القرص المحدودة. قم دائمًا بتشغيل عقدة أخلاقك الكاملة(1) الخاصة بك عندما يكون ذلك ممكنا.
{% endhint %}

قم بالتسجيل للحصول على مفتاح الوصول إلى API على [https://infura.io/](https://infura.io/)

1. قم بالتسجيل للحصول على حساب مجاني.
2. تأكيد عنوان بريدك الإلكتروني.
3. قم بزيارة لوحة التحكم الخاصة بك [https://infura.io/dashboard](https://infura.io/dashboard)
4. إنشاء مشروع، وإعطائه اسماً.
5. حدد **Mainnet** كـ آخر
6. نسخ مفتاح API الخاص بك.
7. قم بتحديث المعلمة **http-web3provider** في **قسم بدء سلسلة الإرشاد**.

```bash
#مثال معلمة
--http-web3provider=https://infura.io/v3/<YOUR_API_KEY>
```
{% endtab %}
{% endtabs %}



{% hint style="info" %}
قد تستغرق مزامنة العقدة الإثنية(1) ما يصل إلى 24 ساعة.
{% endhint %}

{% hint style="success" %}
عقدة أخلاقك(1) مزامنة بالكامل عند وقوع هذه الأحداث.

* **`OpenEthereum:`** `Imported #<block number>`
* **`Geth:`** `استيراد جزء جديد من السلسلة`
* **`بيسو:`** `المستوردة #<block number>`
* **`هولندا:`** `لم تعد مزامنة الرؤوس القديمة`
{% endhint %}

#### 🛠 أوامر داعمة للأخلاق.الخدمة

<unk> 🗒 **لعرض واتباع سجلات الأخلاق 1**

```text
صحفية-أو إيث1-f
```

🗒 **لإيقاف خدمة أخلاق 1**

```text
sudo systemctl توقف الإيثا(1)
```

{% hint style="danger" %}
🛑 **قبل متابعة بقية هذا الدليل، ننصحك بالانتظار حتى أقرب إلى Dec 1 لأن رمز Prysm يعد بسرعة لmainnet.**🚧
{% endhint %}

## 💡 4. Install Prysm

```bash
mkdir ~/prysm && cd ~/prysm 
curl https://raw.githubusercontent.com/prysmaticlabs/prysm/master/prysm.sh --خرج prysm.sh && chmod +x prysm.sh 
```

{% hint style="info" %}
بريسم هو عميل من إيثيريوم 2.0 ويأتي في مكونين.

**عميل سلسلة المنارة** - مسؤول عن إدارة حالة سلسلة المنارة ، والتوفيق ، والمزيد .

**عميل المصادقة** - مسؤول عن إنتاج كتل وشهادات جديدة في سلسلة أجهزة الإرشاد وسلاسل القطع.
{% endhint %}

## 🔥 5. تهيئة إعادة توجيه المنفذ و/أو جدار الحماية

خاصة بإعداد الشبكة أو إعدادات موفر السحابة، [تأكد من أن منافذ جدار الحماية الخاص بك مفتوحة ويمكن الوصول إليها.](guide-or-security-best-practices-for-a-eth2-validator-beaconchain-node.md#configure-your-firewall)

* **عقدة سلسلة منارة بريزم** سوف تستخدم المنفذ 12000 للموسم و المنفذ 13000 لtcp
* **eth1** عقدة تتطلب المنفذ 30303 لtcp و plp

{% hint style="info" %}
✨ **منفذ إعادة توجيه النصيحة:** ستحتاج إلى إعادة توجيه وفتح المنافذ للمثبت الخاص بك. تحقق من أنها تعمل مع [https://www.yougetsignal.com/tools/open-ports/](https://www.yougetsignal.com/tools/open-ports/) أو [https://canyouseeme.org/](https://canyouseeme.org/).
{% endhint %}

## 🎩 6. استيراد مفتاح التحقق

اختر الأمر الصحيح اعتماداً على كيفية تثبيت **eth2deposit-cli.**

{% tabs %}
{% tab title="Pre-built eth2deposit-cli" %}
```bash
$HOMEحسابات/prysm/prysm.sh المصادق على حسابات الاستيراد --keys-dir=$HOME/eth2deposit-cli-9310de0-linux-amd64/validator_keys
```
{% endtab %}

{% tab title="Built from source code" %}
```bash
$HOME/prysm/prysm.sh حسابات المصادقة استيراد --keys-dir=$HOME/git/eth2.0-deposit-cli/validator_keys
```
{% endtab %}
{% endtabs %}

قبول موقع المحفظة الافتراضي، أدخل كلمة مرور جديدة لتشفير محفظتك وإدخال كلمة المرور لحساباتك المستوردة.

{% hint style="danger" %}
**تحذير**: لا تستخدم المفاتيح الغير مستخدمة، أو أنت تحصل على SLASHED.
{% endhint %}

## 🏂 7. بدء سلسلة أجهزة الإرشاد

{% hint style="warning" %}
إذا شاركت في أي من شبكات الاختبار السابقة، تحتاج إلى مسح قاعدة البيانات.

```bash
$HOME/prysm/prysm.sh جهاز الإرشاد السلسلة--clear-db
```
{% endhint %}

إختيارك لتشغيل سلسلة أجهزة الإرشاد والمتحقق يدوياً من سطر الأوامر أو تلقائياً مع النظام.

{% tabs %}
{% tab title="Systemd - Automated" %}
#### 🍰 فوائد استخدام النظام لسلسلة أجهزة الإرشاد ومحققك <a id="benefits-of-using-systemd-for-your-stake-pool"></a>

1. التشغيل التلقائي لسلسلة أجهزة الإرشاد الخاصة بك عندما يقوم الكمبيوتر بإعادة تشغيل الجهاز بسبب الصيانة أو انقطاع الطاقة أو ما إلى ذلك.
2. إعادة تشغيل عمليات سلسلة الإرشاد المحطمة تلقائياً.
3. تعظيم سلسلة أجهزة الإرشاد الخاصة بك لأعلى الوقت والأداء.

#### تعليمات إعداد 🛠

قم بتشغيل ما يلي لإنشاء ملف وحدة **** لتعريف تكوين`جهاز الإرشاد -chain.servic`.

```bash
القط > $HOME/جهاز الإرشاد السلسلة. النصائح << EOF 
# خدمة سلسلة الإرشاد eth2 (جزء من النظام)
# ملف: /etc/systemd/system/iacon-chain. النصيحة 

[Unit]
الوصف = eth2 سلسة الإرشاد
يريد = الشبكة عبر الإنترنت. arget
بعد = الشبكة عبر الإنترنت. arget 

[Service]
المستخدم = $(whoami)
Environment = "ClientIP=$(curl -s v4.
WorkingDirectory= /home/$(whoami)/prysm
ExecStart = /home/$(whoami)/prysm/prysm/prysm.sh منارة -سلسة --p2p-host-ip=${ClientIP} --monitoring-host="0.0. " --http-web3provider=http://127.0.0. :8545 --قبول شروط الاستخدام 
إعادة التشغيل = عند الفشل

[Install]
مطلوب = متعدد المستخدمين. مكافأة

```

{% hint style="info" %}
يمكن لمستخدمي الجغرافيا تحقيق أداء أعلى مع

```bash
http-web3provider=$HOME/.ethereum/geth.ipc
```
{% endhint %}

نقل ملف الوحدة إلى `/etc/systemd/system` وإعطائه الأذونات.

```bash
sudo mv $HOME/beacon-chain.service /etc/systemd/system/beacon-chain.service
sudo chmod 644 /etc/systemd/system/beacon-chain.service
```

قم بتشغيل ما يلي لتمكين التشغيل التلقائي في وقت التمهيد ثم قم بتشغيل خدمة عقدة الإرشاد الخاصة بك.

```text
sudo systemctl daemon-reload
sudo systemctl تمكين جهاز الإرشاد - السلسلة
sudo systemctl بدء تشغيل جهاز الإرشاد السلسلة
```

{% hint style="success" %}
عمل جميل. يتم الآن إدارة سلسلة أجهزة الإرشاد الخاصة بك من خلال موثوقية النظام وقوته. فيما يلي بعض الأوامر لاستخدام النظام.
{% endhint %}

### 🛠 بعض أوامر النظام المفيدة

#### ✅ تحقق مما إذا كانت سلسلة الإرشاد نشطة

```text
Sdo systemctl is-acti-سلسة الإرشاد النشطة
```

#### 🔎 عرض حالة سلسلة أجهزة الإرشاد

```text
سلسلة منارات حالة نظام sudo systemctl
```

#### 🔄 إعادة تشغيل سلسلة أجهزة الإرشاد

```text
sudo systemctl إعادة تحميل-أو إعادة تشغيل سلسلة أجهزة الإرشاد
```

#### 🛑 إيقاف سلسلة أجهزة الإرشاد

```text
sudo systemctl توقف سلسلة أجهزة الإرشاد
```

#### 🗒 عرض السجلات وتصفيتها

```bash
journalctl --unit=beacon-chain --since=أمس
journalctl --unit=beacon-chain --since=اليوم
journalctl --unit=beacon-chain --since='2020-12-01 00:00:00' --until='2020-12-02 12:00:00'
```
{% endtab %}

{% tab title="CLI - Manual" %}
في محطة جديدة ، ابدأ سلسلة أجهزة الإرشاد .

```bash
$HOME/prysm/prysm.sh hiacon-chain \
--p2p-host-ip=$(curl -s v4.ident.me) \
--http-web3provider="http://127.0.0.1:8545"
--monitoring-host="0.0.0" \
--قبول شروط الاستخدام
```

{% hint style="info" %}
يمكن لمستخدمي الجغرافيا تحقيق أداء أعلى مع

```bash
http-web3provider=$HOME/.ethereum/geth.ipc
```
{% endhint %}
{% endtab %}
{% endtabs %}

## 🧬 8. بدء المصادقة <a id="9-start-the-validator"></a>

قم بتخزين كلمة مرور المصادقة في ملف وجعلها مقروءة فقط.

```bash
تردد "my_password_goes_here" > $HOME/.eth2validators/validators-password.txt
sudo chmod 600 $HOME/.eth2validators/validators-password.txt
```

إختيارك لتشغيل المدقق يدوياً من سطر الأوامر أو تلقائياً مع النظام.

{% tabs %}
{% tab title="Systemd - Automated" %}
#### 🍰 فوائد استخدام النظام للمصادق الخاص بك <a id="benefits-of-using-systemd-for-your-stake-pool"></a>

1. بدء التشغيل التلقائي لمحققك عند إعادة تشغيل الكمبيوتر بسبب الصيانة، انقطاع الطاقة، إلخ.
2. إعادة تشغيل عمليات المصادقة المعطلة تلقائياً.
3. تعظيم المصادقة الخاصة بك لأعلى وأداء.

#### تعليمات إعداد 🛠

قم بتشغيل ما يلي لإنشاء ملف وحدة **** لتحديد`المصادقة .service` الخاصة بك.

```bash
قطة > $HOME/مصادقة. النصيحة << EOF 
# خدمة المصادقة للإيث2 (جزء من النظام)
# الملف: /etc/systemd/system/valider. النصيحة 

[Unit]
الوصف = خدمة المصادقة eth2
تريد = الشبكة عبر الإنترنت. ارجيت اريكون-تشين.الخدمة
بعد = شبكة الانترنت. arget 

[Service]
المستخدم = $(whoami)
WorkingDirectory= /home/$(whoami)/prysm
ExecStart = /home/$(whoami)/prysm. (ح) المصادقة --قبول شروط الاستخدام--محفظة كلمة المرور/home/$(whoami)/.eth2المصادقة/المصادقة على كلمة المرور. xt
إعادة التشغيل = عند الفشل

[Install]
مطلوب = متعدد المستخدمين. ارجوت

```

نقل ملف الوحدة إلى `/etc/systemd/system` وإعطائه الأذونات.

```bash
sudo mv $HOME/validator.service /etc/systemd/system/validator.service
sudo chmod 644 /etc/systemd/system/validator.service
```

قم بتشغيل ما يلي لتفعيل التشغيل التلقائي في وقت التمهيد ثم ابدأ المصادقة الخاصة بك.

```text
sudo systemctl daemon-reload
sudo systemctl تمكين المصادقة
sudo systemctl Automatic Translation)
```

### 🛠 بعض أوامر النظام المفيدة

#### ✅ تحقق مما إذا كان المصادقة نشطة

```text
متحقق من sudo systemctl هو نشط
```

#### 🔎 عرض حالة المصادقة

```text
sudo systemctl status validator
```

#### 🔄 إعادة تشغيل المصادقة

```text
تحقق إعادة تحميل أو إعادة تشغيل sudo systemctl
```

#### 🛑 إيقاف المصادقة

```text
sudo systemctl stop validator
```

#### 🗄 عرض السجلات وتصفيتها

```bash
journalctl --unit=المصادق --since=أمس
journalctl --unit=المصادق --since=اليوم
journalctl --unit=المصادقة --since='2020-12-01 00:00:00' --until='2020-12-02 12:00'
```
{% endtab %}

{% tab title="CLI - Manual" %}
في محطة طرفية جديدة، ابدأ المصادقة.

```bash
$HOME/prysm/prysm.sh المصادقة \
--قبول شروط الاستخدام \
--wallet-password-file /home/$(whoami)/.eth2validators/validators-password.txt
```
{% endtab %}
{% endtabs %}

تحقق من أن **المفتاح العمومي الخاص بك** يظهر في السجلات. المثال أدناه:

```text
INFO تمكين المصادق التصويت_pubkey: 0x2374.....7121
```

{% hint style="info" %}
**عميل المصادقة** - مسؤول عن إنتاج كتل وشهادات جديدة في سلسلة أجهزة الإرشاد وسلاسل القطع.

**عميل سلسلة المنارة** - مسؤول عن إدارة حالة سلسلة المنارة ، والتوفيق ، والمزيد .
{% endhint %}

{% hint style="success" %}
تهانينا. بمجرد مزامنة سلسلة أجهزة الإرشاد الخاصة بك، والتحقق من صحتها وتشغيلها، فإنك تنتظر للتفعيل. وتستغرق هذه العملية مدة 24 ساعة. عندما يتم تعيينك، سيبدأ المصادق الخاص بك في إنشاء الكتل والتصويت عليها أثناء كسب مكافآت حزم ETH.

استخدم [beaconcha.in](https://beaconcha.in/) و [تسجيل حساب](https://beaconcha.in/register) لإنشاء تنبيهات وتتبع أداء المصادق الخاص بك.
{% endhint %}

## 🕒 9. المزامنة الزمنية

{% hint style="info" %}
لأن سلسلة المنارات تعتمد على أوقات دقيقة لأداء الشهادات وإنتاج الكتل، يجب أن يكون وقت جهاز الكمبيوتر الخاص بك دقيقاً لوقت NTP الحقيقي أو NTS خلال 0. ثواني.
{% endhint %}

إعداد **Chrony** مع الدليل التالي.

{% hint style="info" %}
التزامن هو تنفيذ لبروتوكول وقت الشبكة ويساعد على الحفاظ على وقت الكمبيوتر الخاص بك متزامنة مع NTP.
{% endhint %}

## 🔎 10. مراقبة المصادقة الخاصة بك باستخدام Grafana و Prometheus

Prometheus هو منصة رصد تجمع المقاييس من الأهداف المرصودة عن طريق تخريد نقاط نهاية HTTP القياسية على هذه الأهداف. [الوثائق الرسمية متوفرة هنا.](https://prometheus.io/docs/introduction/overview/) Grafana هي لوحة تحكم تستخدم لتصور البيانات التي تم جمعها.

### 🐣 10.1 تثبيت

تثبيت Prometheus و Prometheus node.

```text
قم بتثبيت -y prometheus prometheus-nodeمصدر sudo apt-get
```

تثبيت غرافانا

```bash
wget -q -O - https://packages.grafana.com/gpg.key <unk> sudo apt-key إضافة -
echo "deb https://packages.grafana.com/oss/deb stable main" > grafana.
sudo mv grafana.list /etc/apt/sources.list.d/grafana.list
sudo apt-get upd && sudo apt-get install -y grafana
```

تمكين الخدمات حتى تبدأ تلقائياً.

```bash
sudo systemctl تمكين grafana-server.service
sudo systemctl تمكين prometheus.service
sudo systemctl تمكين prometheus-node-exporter.service
```

تحديث **prometheus.yml** الموجود في `/etc/prometheus/prometheus.yml`

```bash
قطة > $HOME/prometheus.yml << Eof
global:
  scrape_interval: 15s # بشكل افتراضي، التجسس أهداف كل 15 ثانية.

  # إرفاق هذه التسميات إلى أي سلسلة زمنية أو تنبيهات عند التواصل مع
  # من الأنظمة الخارجية (التحصيل، التخزين عن بعد، مدير التنبيه).
  external_labels:
    monitor: 'codelab-monitor'

# تكوين سكراب يحتوي على نقطة نهاية واحدة بالضبط:
# هنا Prometheus نفسه.
scrape_configs:
  - job_name: 'node_exporter'
    static_configs:
      - targets: ['localhost:9100']
  - job_name: 'validator'
    static_configs:
      - targets: ['localhost:8081']
  - job_name: 'beacon node'
    static_configs:
      - targets: ['localhost:8080']
  - job_name: 'slasher'
    static_configs:
      - targets: ['localhost:8082']
EOF
sudo mv $HOME/prometheus.yml /etc/prometheus/prometheus.yml
```

أخيرا، إعادة تشغيل الخدمات.

```bash
sudo systemctl أعد تشغيل grafana-server.service
sudo systemctl rewitt prometheus.service
sudo systemctl rewitt prometheus-node-exporter.service
```

تحقق من أن الخدمات تعمل بشكل صحيح:

```text
sudo systemctl status grafana-server.service prometheus.service prometheus-node-exporter.service
```

{% hint style="info" %}
💡 **تذكير**: تأكد من فتح المنفذ 3000 على جدار الحماية و/أو المنفذ إذا كنت تنوي مشاهدة معلومات المراقبة من آلة مختلفة.
{% endhint %}

### 📶 10.2 إعداد لوحة تحكم Grafana

1. افتح [http://localhost:3000](http://localhost:3000) أو [http://&lt;your](http://<your) validator's ip address&gt;:3000 في المتصفح المحلي الخاص بك.
2. تسجيل الدخول باستخدام **المشرف** / **المشرف**
3. تغيير كلمة المرور
4. انقر فوق أيقونة **تهيئة** ثم **إضافة مصدر البيانات**
5. حدد **Prometheus**
6. تعيين **الاسم** إلى **"بروميثيوس**"
7. تعيين **URL** إلى [http://localhost:9090](http://localhost:9090)
8. انقر فوق **حفظ & اختبار**
9. **قم بتحميل وحفظ** هذا [**ملف json**](https://raw.githubusercontent.com/GuillaumeMiralles/prysm-grafana-dashboard/master/less_10_validators.json)**.** أو إذا كان لديك أكثر من 10 مدققين، استخدم هذا [ملف json](https://raw.githubusercontent.com/GuillaumeMiralles/prysm-grafana-dashboard/master/more_10_validators.json).
10. انقر فوق **إنشاء +** أيقونة &gt; **استيراد**
11. إضافة لوحة التحكم عن طريق **تحميل ملف JSON**
12. انقر فوق زر **استيراد**

![لوحة تحكم بريسام](../../.gitbook/assets/prysm_dash.png)

### ⚠ 10.3 إعداد إشعارات التنبيه

{% hint style="info" %}
قم بإعداد تنبيهات للحصول على إشعار إذا كان مدقققك غير متصل.
{% endhint %}

احصل على إشعار بالمشاكل مع المدققين الخاص بك. اختر بين البريد الإلكتروني أو البرق أو الشقاق أو الخردة.

{% tabs %}
{% tab title="Email Notifications" %}
1. زيارة [https://beaconcha.in/](https://beaconcha.in/)
2. قم بالتسجيل ****للحصول على حساب ****
3. تحقق من بريدك الإلكتروني ****
4. البحث عن **عنوان المصادقة العام الخاص بك**
5. إضافة محققين إلى قائمة المراقبة الخاصة بك بالنقر على رمز الإشارات المرجعية ****.
{% endtab %}

{% tab title="Telegram Notifications" %}
1. في قائمة Grafana، حدد **قنوات الإشعارات** تحت أيقونة الجرس. ![](../../.gitbook/assets/gra-noti.png)
2. انقر فوق **إضافة قناة**.
3. إعطاء قناة الإشعار إسم ****.
4. حدد **تيليجرام** من قائمة النوع.
5. لإكمال **إعدادات API Telegram**، مطلوب قناة تيليجرام وبوت. للحصول على تعليمات بشأن إعداد بوت مع `@Botfather`، انظر [هذا القسم](https://core.telegram.org/bots#6-botfather) من وثائق تيليجرام.
6. بمجرد الانتهاء من ذلك، قم بدعوة البوت إلى القناة المنشأة حديثا.
{% endtab %}

{% tab title="Discord Notifications" %}
1. في قائمة Grafana، حدد **قنوات الإشعارات** تحت أيقونة الجرس. ![](../../.gitbook/assets/gra-noti.png)
2. انقر فوق **إضافة قناة**.
3. إضافة اسم **** إلى قناة الإشعار.
4. حدد **ديسكورد** من قائمة النوع.
5. لإكمال الإعداد، مطلوب خادم ديسكورد \(وقناة نصية متاحة\) فضلا عن رابط ويب هوك. للحصول على تعليمات بشأن إعداد موقع ديسكورد على الويبهوك، انظر [هذا القسم](https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks) من وثائقهم.
6. أدخل رابط Webhook **** في لوحة إعدادات الإشعارات ديسكورد.
7. انقر فوق **إرسال الاختبار**، الذي سيدفع رسالة تأكيد إلى قناة ديسكورد.
{% endtab %}

{% tab title="Slack Notifications" %}
1. في قائمة Grafana، حدد **قنوات الإشعارات** تحت أيقونة الجرس. ![](../../.gitbook/assets/gra-noti.png)
2. انقر فوق **إضافة قناة**.
3. إضافة اسم **** إلى قناة الإشعار.
4. حدد **Slack** من قائمة النوع.
5. للحصول على تعليمات بشأن إعداد Slack's Inack's Webhooks ، راجع [هذا القسم](https://api.slack.com/messaging/webhooks) من وثائقهم.
6. أدخل عنوان URL Slack الوارد Webhook في حقل **URL**
7. انقر فوق **إرسال الاختبار**، الذي سيدفع رسالة تأكيد إلى قناة Slack .
{% endtab %}
{% endtabs %}

{% hint style="success" %}
🎉 تهانينا على إعداد المصادقة الخاصة بك! أنتِ جيدتِ أن تذهبَ إلى الإيث2.0.

هل وجدت دليلنا مفيداً؟ اسمحوا لنا أن نعرف بنصيحة وسنواصل تحديثها.

استخدم [cointr.ee للعثور على عناوين تبرعنا ](https://cointr.ee/coincashew). 🙌

وأي ردود فعل وكل سحب تطلب الكثير من التقدير. 😃

قم بالخروج والدردشة مع زميلي الأسهم على البرق @ [https://t.me/coincashew](https://t.me/coincashew)🌛
{% endhint %}

## 🧙♂ 11. تحديث Prysm

إعادة تشغيل سلسلة أجهزة الإرشاد والمصادقة وفقاً لإجراءات التشغيل العادية.

{% tabs %}
{% tab title="Systemd - Automated" %}
```text
إعادة تحميل أو إعادة تشغيل جهاز الإرشاد
sudo systemctl إعادة تحميل أو إعادة تشغيل الجهاز
```
{% endtab %}

{% tab title="CLI - Manual" %}
```bash
#تحكم C للخروج من كل من سلسلة أجهزة الإرشاد الخاصة بك وعمليات التحقق 
#اضغط على السهم للأعلى وإدخال لإعادة التشغيل.
```
{% endtab %}
{% endtabs %}

## 🧩 12. مادة مرجعية

ونقدر العمل الشاق الذي قام به الأشخاص البارزون على الروابط التالية التي كانت بمثابة أساس لإنشاء هذا الدليل.

{% تضمين url="https://discord.gg/KSA7rPr" %}

{% تضمين url="https://launchpad.ethereum.org/" caption="" %}

{% تضمين url="https://prylabs.net/participate" %}

{% تضمين url="https://docs.prylabs.network/docs/getting-started/" %}

## 🎉 13. روابط إضافية

### 🌰 أدلة CoinCashew للعملاء الآخرين ETH2

{% page-ref page="guide-how-to-stake-on-eth2-with-lighthouse.md" %}

{% page-ref page="guide-how-to-stake-on-eth2-with-teku-on-ubuntu.md" %}

{% page-ref page="guide-how-to-stake-on-eth2-with-nimbus.md" %}

{% page-ref page="guide-how-to-stake-on-eth2-with-lodestar.md" %}

### مستكشفي الكتل 🧱 ETH2

{% تضمين url="https://beaconcha.in" caption="" %}

{% تضمين url="https://beaconscan.com" caption="" %}

### 🗒 أحدث معلومات إثنية 2

{% تضمين url="https://www.reddit.com/r/ethstaker" caption="" %}

{% تضمين url="https://blog.ethereum.org" caption="" %}

{% تضمين url="http://invite.gg/ethstaker" caption="" %}

{% تضمين url="https://hackmd.io/@benjaminion/eth2\_news/" caption="" %}

## 🔥 14. نصائح إضافية مفيدة

### 🛑 14.1 خروج طوعي من المصادقة

{% hint style="info" %}
استخدم هذا الأمر للإشارة إلى نواياك لوقف التحقق من صحتها مع المصادقة الخاصة بك. هذا يعني أنك لم تعد ترغب في المشاركة مع المصادقة الخاصة بك وترغب في إيقاف تشغيل العقدة الخاصة بك.

* الخروج الطوعي يأخذ حد أدنى من حبوب 2048 \(أو ~9أيام\). هناك قائمة انتظار للخروج وتأخير قبل أن يتم الخروج من المصادقة الخاصة بك في نهاية المطاف.
* بمجرد خروج المصادق في المرحلة 0، يصبح هذا غير قابل للنقض ولا يمكنك إعادة تشغيل التحقق مرة أخرى.
* لن تكون أموالك متاحة للانسحاب حتى المرحلة 1-5 أو بعدها.
* بعد أن يغادر المصادق الخاص بك قائمة الانتظار والخروج الحقيقي، يصبح من الآمن إيقاف عقدة الجهاز الإرشادي والمتحقق منه.
{% endhint %}

```bash
$HOMEحسابات المصادقة prysm.sh
```

### 🔐 14.2 تحقق من العبارة الخاصة بك

باستخدام أداة eth2deposit-cli ، تأكد من أنه يمكنك تجديد نفس أزواج المفاتيح الأخلاقية عن طريق استعادة `المصادقة_keyys`

```bash
./الإيداع القائمة-mnemonic -chain mainnet
```

{% hint style="info" %}
عندما يكون **pubke** متطابق، هذا يعني أن **ملف المفاتيح الخاص بك** قد تحقق بشكل صحيح من جملتك البرمجية. الحقول الأخرى ستكون مختلفة بسبب البيع.
{% endhint %}

### 🤖 14.3 إضافة محققين إضافيين

باستخدام أداة eth2deposit-cli ، يمكنك إضافة المزيد من جهات التحقق عن طريق إنشاء ملف جديد لبيانات الإيداع و `validator_keys`

على سبيل المثال، في حال أنشأنا في الأصل 3 مدققين لكننا نرغب الآن في إضافة 5 مدققين أكثر، يمكننا استخدام الأمر التالي.

```bash
./الإيداع القائمة-mnemonic --validator_start_index 3 --num_validators 5 --سلسلة mainnet
```

أكمل الخطوات لتحميل `deposit_data-###########.json` إلى موقع لوحة التشغيل.

